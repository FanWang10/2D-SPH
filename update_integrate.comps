
#version 460

#define WORK_GROUP_SIZE 128

layout (local_size_x = WORK_GROUP_SIZE) in;

#define H 4.f * 0.005f
#define PARTICLE_NUM 5000
#define TIME_STEP 0.0001f
#define DAMPING -0.3f

layout(std430, binding = 0) buffer position_block
{
    vec2 position[];
};

layout(std430, binding = 1) buffer velocity_block
{
    vec2 velocity[];
};

layout(std430, binding = 2) buffer force_block
{
    vec2 force[];
};

layout(std430, binding = 3) buffer density_block
{
    float density[];
};

layout(std430, binding = 4) buffer pressure_block
{
    float pressure[];
};


void main()
{
    uint i = gl_GlobalInvocationID.x;
    
    vec2 velocity_particle = velocity[i] + TIME_STEP * force[i] / density[i];
    vec2 position_particle = position[i] + TIME_STEP * velocity_particle;

    if(position[i].x < -1.f)
    {
        velocity_particle *= DAMPING;
        position_particle.x = -1.f;
    }else if(position[i].x> 1.f)
    {
        velocity_particle *= DAMPING;
        position_particle.x = 1.f;
    }

    if(position[i].y< -1.f)
    {
        velocity_particle *= DAMPING;
        position_particle.y = -1.f;
    }else if(position[i].y > 1.f)
    {
        velocity_particle *= DAMPING;
        position_particle.y = 1.f;
    }

    velocity[i] = velocity_particle;
    position[i] = position_particle;
    
}